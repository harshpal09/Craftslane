{"version":3,"sources":["style.js"],"names":["height","Dimensions","get","width","styles","StyleSheet","create","viewOuter","flexDirection","viewBtnLeft","justifyContent","alignItems","fontSize","PixelRatio","roundToNearestPixel","borderWidth","borderColor","borderTopLeftRadius","borderBottomLeftRadius","viewBtnRight","borderTopRightRadius","borderBottomRightRadius","viewTextInput","labelStyle"],"mappings":";;;;;;;AAAA;;AAEA,IAAI;AAACA,EAAAA;AAAD,IAAWC,wBAAWC,GAAX,CAAe,QAAf,CAAf;;AACA,IAAI;AAACC,EAAAA;AAAD,IAAUF,wBAAWC,GAAX,CAAe,QAAf,CAAd;;AAEA,MAAME,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EAAE;AADN,GADoB;AAI/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,cAAc,EAAE,QADL;AAEXC,IAAAA,UAAU,EAAE,QAFD;AAGXC,IAAAA,QAAQ,EAAE,EAHC;AAIXZ,IAAAA,MAAM,EAAEa,wBAAWC,mBAAX,CAAgCd,MAAM,GAAG,CAAV,GAAe,GAA9C,CAJG;AAKXG,IAAAA,KAAK,EAAEU,wBAAWC,mBAAX,CAAgCX,KAAK,GAAG,CAAT,GAAc,GAA7C,CALI;AAMXY,IAAAA,WAAW,EAAE,CANF;AAOXC,IAAAA,WAAW,EAAE,SAPF;AAQXC,IAAAA,mBAAmB,EAAEJ,wBAAWC,mBAAX,CAAgCd,MAAM,GAAG,CAAV,GAAe,GAA9C,CARV;AASXkB,IAAAA,sBAAsB,EAAEL,wBAAWC,mBAAX,CAAgCd,MAAM,GAAG,CAAV,GAAe,GAA9C;AATb,GAJkB;AAe/BmB,EAAAA,YAAY,EAAE;AACZT,IAAAA,cAAc,EAAE,QADJ;AAEZC,IAAAA,UAAU,EAAE,QAFA;AAGZI,IAAAA,WAAW,EAAE,CAHD;AAIZC,IAAAA,WAAW,EAAE,SAJD;AAKZhB,IAAAA,MAAM,EAAEa,wBAAWC,mBAAX,CAAgCd,MAAM,GAAG,CAAV,GAAe,GAA9C,CALI;AAMZG,IAAAA,KAAK,EAAEU,wBAAWC,mBAAX,CAAgCX,KAAK,GAAG,CAAT,GAAc,GAA7C,CANK;AAOZiB,IAAAA,oBAAoB,EAAEP,wBAAWC,mBAAX,CAAgCd,MAAM,GAAG,CAAV,GAAe,GAA9C,CAPV;AAQZqB,IAAAA,uBAAuB,EAAER,wBAAWC,mBAAX,CAAgCd,MAAM,GAAG,CAAV,GAAe,GAA9C;AARb,GAfiB;AAyB/BsB,EAAAA,aAAa,EAAE;AACbZ,IAAAA,cAAc,EAAE,QADH;AAEbC,IAAAA,UAAU,EAAE,QAFC;AAGbC,IAAAA,QAAQ,EAAE,EAHG;AAIbG,IAAAA,WAAW,EAAE,CAJA;AAKbC,IAAAA,WAAW,EAAE,SALA;AAMbhB,IAAAA,MAAM,EAAEa,wBAAWC,mBAAX,CAAgCd,MAAM,GAAG,CAAV,GAAe,GAA9C,CANK;AAObG,IAAAA,KAAK,EAAEU,wBAAWC,mBAAX,CAAgCX,KAAK,GAAG,CAAT,GAAc,GAA7C;AAPM,GAzBgB;AAkC/BoB,EAAAA,UAAU,EAAC;AACTX,IAAAA,QAAQ,EAAE;AADD;AAlCoB,CAAlB,CAAf;;eAsCeR,M","sourcesContent":["import {Dimensions, PixelRatio, StyleSheet} from 'react-native';\n\nlet {height} = Dimensions.get('window');\nlet {width} = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  viewOuter: {\n    flexDirection: 'row',\n  },\n  viewBtnLeft: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 18,\n    height: PixelRatio.roundToNearestPixel((height * 5) / 100),\n    width: PixelRatio.roundToNearestPixel((width * 8) / 100),\n    borderWidth: 1,\n    borderColor: '#eeeeee',\n    borderTopLeftRadius: PixelRatio.roundToNearestPixel((height * 1) / 100),\n    borderBottomLeftRadius: PixelRatio.roundToNearestPixel((height * 1) / 100),\n  },\n  viewBtnRight: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#eeeeee',\n    height: PixelRatio.roundToNearestPixel((height * 5) / 100),\n    width: PixelRatio.roundToNearestPixel((width * 8) / 100),\n    borderTopRightRadius: PixelRatio.roundToNearestPixel((height * 1) / 100),\n    borderBottomRightRadius: PixelRatio.roundToNearestPixel((height * 1) / 100),\n  },\n  viewTextInput: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 18,\n    borderWidth: 1,\n    borderColor: '#eeeeee',\n    height: PixelRatio.roundToNearestPixel((height * 5) / 100),\n    width: PixelRatio.roundToNearestPixel((width * 8) / 100),\n  },\n  labelStyle:{\n    fontSize: 10,\n  },\n});\nexport default styles;\n"]}