{"version":3,"sources":["style.js"],"names":["Dimensions","PixelRatio","StyleSheet","height","get","width","styles","create","viewOuter","flexDirection","viewBtnLeft","justifyContent","alignItems","fontSize","roundToNearestPixel","borderWidth","borderColor","borderTopLeftRadius","borderBottomLeftRadius","viewBtnRight","borderTopRightRadius","borderBottomRightRadius","viewTextInput","labelStyle"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,UAApB,EAAgCC,UAAhC,QAAiD,cAAjD;AAEA,IAAI;AAACC,EAAAA;AAAD,IAAWH,UAAU,CAACI,GAAX,CAAe,QAAf,CAAf;AACA,IAAI;AAACC,EAAAA;AAAD,IAAUL,UAAU,CAACI,GAAX,CAAe,QAAf,CAAd;AAEA,MAAME,MAAM,GAAGJ,UAAU,CAACK,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EAAE;AADN,GADoB;AAI/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,cAAc,EAAE,QADL;AAEXC,IAAAA,UAAU,EAAE,QAFD;AAGXC,IAAAA,QAAQ,EAAE,EAHC;AAIXV,IAAAA,MAAM,EAAEF,UAAU,CAACa,mBAAX,CAAgCX,MAAM,GAAG,CAAV,GAAe,GAA9C,CAJG;AAKXE,IAAAA,KAAK,EAAEJ,UAAU,CAACa,mBAAX,CAAgCT,KAAK,GAAG,CAAT,GAAc,GAA7C,CALI;AAMXU,IAAAA,WAAW,EAAE,CANF;AAOXC,IAAAA,WAAW,EAAE,SAPF;AAQXC,IAAAA,mBAAmB,EAAEhB,UAAU,CAACa,mBAAX,CAAgCX,MAAM,GAAG,CAAV,GAAe,GAA9C,CARV;AASXe,IAAAA,sBAAsB,EAAEjB,UAAU,CAACa,mBAAX,CAAgCX,MAAM,GAAG,CAAV,GAAe,GAA9C;AATb,GAJkB;AAe/BgB,EAAAA,YAAY,EAAE;AACZR,IAAAA,cAAc,EAAE,QADJ;AAEZC,IAAAA,UAAU,EAAE,QAFA;AAGZG,IAAAA,WAAW,EAAE,CAHD;AAIZC,IAAAA,WAAW,EAAE,SAJD;AAKZb,IAAAA,MAAM,EAAEF,UAAU,CAACa,mBAAX,CAAgCX,MAAM,GAAG,CAAV,GAAe,GAA9C,CALI;AAMZE,IAAAA,KAAK,EAAEJ,UAAU,CAACa,mBAAX,CAAgCT,KAAK,GAAG,CAAT,GAAc,GAA7C,CANK;AAOZe,IAAAA,oBAAoB,EAAEnB,UAAU,CAACa,mBAAX,CAAgCX,MAAM,GAAG,CAAV,GAAe,GAA9C,CAPV;AAQZkB,IAAAA,uBAAuB,EAAEpB,UAAU,CAACa,mBAAX,CAAgCX,MAAM,GAAG,CAAV,GAAe,GAA9C;AARb,GAfiB;AAyB/BmB,EAAAA,aAAa,EAAE;AACbX,IAAAA,cAAc,EAAE,QADH;AAEbC,IAAAA,UAAU,EAAE,QAFC;AAGbC,IAAAA,QAAQ,EAAE,EAHG;AAIbE,IAAAA,WAAW,EAAE,CAJA;AAKbC,IAAAA,WAAW,EAAE,SALA;AAMbb,IAAAA,MAAM,EAAEF,UAAU,CAACa,mBAAX,CAAgCX,MAAM,GAAG,CAAV,GAAe,GAA9C,CANK;AAObE,IAAAA,KAAK,EAAEJ,UAAU,CAACa,mBAAX,CAAgCT,KAAK,GAAG,CAAT,GAAc,GAA7C;AAPM,GAzBgB;AAkC/BkB,EAAAA,UAAU,EAAC;AACTV,IAAAA,QAAQ,EAAE;AADD;AAlCoB,CAAlB,CAAf;AAsCA,eAAeP,MAAf","sourcesContent":["import {Dimensions, PixelRatio, StyleSheet} from 'react-native';\n\nlet {height} = Dimensions.get('window');\nlet {width} = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  viewOuter: {\n    flexDirection: 'row',\n  },\n  viewBtnLeft: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 18,\n    height: PixelRatio.roundToNearestPixel((height * 5) / 100),\n    width: PixelRatio.roundToNearestPixel((width * 8) / 100),\n    borderWidth: 1,\n    borderColor: '#eeeeee',\n    borderTopLeftRadius: PixelRatio.roundToNearestPixel((height * 1) / 100),\n    borderBottomLeftRadius: PixelRatio.roundToNearestPixel((height * 1) / 100),\n  },\n  viewBtnRight: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#eeeeee',\n    height: PixelRatio.roundToNearestPixel((height * 5) / 100),\n    width: PixelRatio.roundToNearestPixel((width * 8) / 100),\n    borderTopRightRadius: PixelRatio.roundToNearestPixel((height * 1) / 100),\n    borderBottomRightRadius: PixelRatio.roundToNearestPixel((height * 1) / 100),\n  },\n  viewTextInput: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 18,\n    borderWidth: 1,\n    borderColor: '#eeeeee',\n    height: PixelRatio.roundToNearestPixel((height * 5) / 100),\n    width: PixelRatio.roundToNearestPixel((width * 8) / 100),\n  },\n  labelStyle:{\n    fontSize: 10,\n  },\n});\nexport default styles;\n"]}